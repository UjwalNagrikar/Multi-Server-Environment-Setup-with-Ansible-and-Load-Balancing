---
- name: Deploy HTML Application
  hosts: webservers
  become: yes

  vars:
    app_dir: /var/www/myapp
    html_content: |
      <!DOCTYPE html>
      <html>
      <head><title>MyApp</title></head>
      <body>
        <h1>Welcome to MyApp!</h1>
      </body>
      </html>

  tasks:
    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Deploy HTML file
      copy:
        content: "{{ html_content }}"
        dest: "{{ app_dir }}/index.html"
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Install NGINX
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Ensure NGINX is running
      service:
        name: nginx
        state: started
        enabled: yes


- name: Configure Load Balancer
  hosts: loadbalancers
  become: yes

  vars:
    lb_config_path: /etc/nginx/sites-available/myapp_lb.conf
    upstream_name: myapp_servers
    nginx_port: 80
    backend_servers:
      - 15.207.86.27
      - 43.205.99.213

  tasks:
    - name: Install NGINX
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Create NGINX load balancer config
      copy:
        dest: "{{ lb_config_path }}"
        content: |
          upstream {{ upstream_name }} {
          {% for server in backend_servers %}
              server {{ server }}:80;
          {% endfor %}
          }

          server {
              listen {{ nginx_port }};

              location / {
                  proxy_pass http://{{ upstream_name }};
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
              }
          }
      notify:
        - Reload NGINX

    - name: Enable NGINX site
      file:
        src: "{{ lb_config_path }}"
        dest: /etc/nginx/sites-enabled/myapp_lb.conf
        state: link
      notify:
        - Reload NGINX

    # âœ… Fixed firewall rules
    - name: Allow SSH
      ufw:
        rule: allow
        port: 22
        proto: tcp

    - name: Allow HTTP
      ufw:
        rule: allow
        port: 80
        proto: tcp

    - name: Allow HTTPS
      ufw:
        rule: allow
        port: 443
        proto: tcp

  handlers:
    - name: Reload NGINX
      service:
        name: nginx
        state: restarted
